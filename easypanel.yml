name: growfast-website
services:
  app:
    image:
      context: .
      dockerfile: ./Dockerfile.easypanel
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://growfast:4CrSa.c5K%M%zn@growfast-db:5432/growfastwithus
      - SESSION_SECRET=$(SESSION_SECRET)
      - CLERK_PUBLISHABLE_KEY=$(CLERK_PUBLISHABLE_KEY)
      - CLERK_SECRET_KEY=$(CLERK_SECRET_KEY)
      - SMTP_HOST=$(SMTP_HOST)
      - SMTP_PORT=$(SMTP_PORT)
      - SMTP_SECURE=$(SMTP_SECURE)
      - SMTP_USER=$(SMTP_USER)
      - SMTP_PASS=$(SMTP_PASS)
      - FRONTEND_URL=https://$(PRIMARY_DOMAIN)
      - PGHOST=growfast-db
      - PGPORT=5432
      - PGUSER=growfast
      - PGPASSWORD=4CrSa.c5K%M%zn
      - PGDATABASE=growfastwithus
    deploy:
      replicas: 1
      resources:
        reservations:
          memory: 512M
        limits:
          memory: 1G
    depends_on:
      - growfast-db
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  growfast-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=growfastwithus
      - POSTGRES_USER=growfast
      - POSTGRES_PASSWORD=4CrSa.c5K%M%zn
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      replicas: 1
      resources:
        reservations:
          memory: 256M
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U growfast -d growfastwithus"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  app_logs: 